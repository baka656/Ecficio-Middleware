{"version":3,"sources":["webpack:///src/app/online-registration/online-registration.page.html","webpack:///src/app/online-registration/qrgenerate/qrgenerate.component.html","webpack:///src/app/online-registration/online-registration-routing.module.ts","webpack:///src/app/online-registration/online-registration.module.ts","webpack:///src/app/online-registration/online-registration.page.scss","webpack:///src/app/online-registration/online-registration.page.ts","webpack:///src/app/online-registration/qrgenerate/qrgenerate.component.scss","webpack:///src/app/online-registration/qrgenerate/qrgenerate.component.ts"],"names":["routes","path","component","OnlineRegistrationPageRoutingModule","imports","forChild","exports","OnlineRegistrationPageModule","declarations","OnlineRegistrationPage","us","alrt","fb","router","submitted","err","userDetails","paymentAmount","currency","currencyIcon","razor_key","registrationForm","group","email","compose","required","pattern","name","rollno","college","phone","minLength","maxLength","console","log","invalid","validEmail","value","subscribe","data","paywithRazor","alert","options","description","image","key","amount","prefill","contact","theme","color","modal","ondismiss","successCallback","payment_id","tid","paid","timestamp","Date","addUser","navigate","cancelCallback","error","code","RazorpayCheckout","open","controls","selector","template","QrgenerateComponent","route","navCtrl","registerUser","rno","Number","snapshot","paramMap","get","getUser","receipt","qrdata","toString","replace","back"],"mappings":"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","file":"online-registration-online-registration-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Online Registration</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content> \\n  \\n  <form [formGroup]=\\\"registrationForm\\\" (ngSubmit)=\\\"createCode()\\\">\\n    <ion-list>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Name</ion-label>\\n        <ion-input formControlName=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\"></ion-input>\\n        <ion-item *ngIf=\\\"submitted && f.name.errors\\\" class=\\\"invalid-feedback\\\">\\n          <p *ngIf=\\\"f.name.errors.required\\\">Name is required</p>\\n        </ion-item>\\n      </ion-item>\\n      <ion-item >\\n        <ion-label position=\\\"stacked\\\">College</ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"college\\\" class=\\\"form-control\\\" type=\\\"text\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.college.errors }\\\"></ion-input>\\n        <ion-item *ngIf=\\\"submitted && f.college.errors\\\" class=\\\"invalid-feedback\\\">\\n          <p *ngIf=\\\"f.college.errors.required\\\">College is required</p>\\n        </ion-item>\\n      </ion-item> \\n      <ion-item >\\n        <ion-label position=\\\"stacked\\\">Phone</ion-label>\\n        <ion-input formControlName=\\\"phone\\\" type=\\\"number\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.phone.errors }\\\"></ion-input>\\n        <ion-item *ngIf=\\\"submitted && f.phone.errors\\\" class=\\\"invalid-feedback\\\">\\n          <p *ngIf=\\\"f.phone.errors.required\\\">Phone is required</p>\\n          <p *ngIf=\\\"f.phone.errors.minLength\\\">phone number should have 10digits</p>\\n          <p *ngIf=\\\"f.phone.errors.maxLength\\\">phone number should have 10digits</p>\\n        </ion-item>\\n      </ion-item> \\n      <ion-item >\\n        <ion-label position=\\\"stacked\\\">Roll no</ion-label>\\n        <ion-input formControlName=\\\"rollno\\\" type=\\\"text\\\" class=\\\"form-control\\\"  [ngClass]=\\\"{ 'is-invalid': submitted && f.rollno.errors }\\\"></ion-input>\\n        <ion-item *ngIf=\\\"submitted && f.rollno.errors\\\" class=\\\"invalid-feedback\\\">\\n          <p *ngIf=\\\"f.rollno.errors.required\\\">Roll No is required</p>\\n        </ion-item>       \\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Email</ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\"  [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\"></ion-input>\\n        <ion-item *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n            <p *ngIf=\\\"f.email.errors.required\\\">Email Id is required</p>\\n            <p *ngIf=\\\"f.email.errors.pattern\\\">Please provide a valid email-id</p>\\n        </ion-item>\\n      </ion-item>    \\n      <ion-item>\\n        <ion-text style=\\\"text-align: center;\\\">Amount to be paid is: Rs.310.00</ion-text>\\n      </ion-item> \\n      <ion-item>\\n        <button type=submit size=\\\"small\\\" class=\\\"btn btn-primary waves-effect waves-dark\\\">Proceed<ion-icon slot=\\\"end\\\" name=\\\"create\\\"></ion-icon></button>\\n      </ion-item>\\n      </ion-list>   \\n  </form>\\n  \\n</ion-content>\";","export default \"<ion-content>\\n  <ion-grid style=\\\"background-color:aquamarine;\\\">\\n    <ion-row style=\\\"margin-top:10%\\\">\\n      <ion-col>\\n        <div></div>\\n      </ion-col>\\n      <ion-col>\\n        <ion-text color=\\\"primary\\\" align=\\\"center\\\">\\n          <h1 style=\\\"color:black;\\\"><b>Ecficio 4.0</b></h1> \\n          <h2 style=\\\"color: black;\\\"><b>Receipt No:{{registerUser.receipt}}</b></h2>  \\n       </ion-text>\\n        <div align=\\\"center\\\">\\n          <ngx-qrcode \\n            [elementType]=\\\"canvas\\\" \\n            [value] = \\\"qrdata\\\" >\\n          </ngx-qrcode>\\n        </div>\\n        <ion-text color=\\\"primary\\\" align=\\\"center\\\">\\n          <div align=\\\"center\\\" style=\\\"color:black;\\\">{{registerUser.name}}</div>\\n          <p style=\\\"color:black;\\\">Thanks For Registering!!</p>\\n        </ion-text>\\n        <ion-datetime displayFormat=\\\"MMM DD YYYY, h:mm A\\\" [(ngModel)]=\\\"registerUser.timestamp\\\" style=\\\"color:black;\\\"></ion-datetime>\\n        <p style=\\\"color:black;\\\"><b>Note:</b>Please Show The <b>QRCODE</b> at the Time of Participating in Events</p>\\n      </ion-col>\\n      <ion-col>\\n        <div></div>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n    </ion-row>\\n  </ion-grid>\\n      \\n  <ion-button style=\\\"text-align: center;\\\" align=\\\"center\\\" (click)=\\\"done()\\\">Done</ion-button>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OnlineRegistrationPage } from './online-registration.page';\nimport { QrgenerateComponent } from './qrgenerate/qrgenerate.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OnlineRegistrationPage\n  },\n  {\n    path: ':id',\n    component: QrgenerateComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OnlineRegistrationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule, AlertController } from '@ionic/angular';\n\nimport { OnlineRegistrationPageRoutingModule } from './online-registration-routing.module';\n\nimport { OnlineRegistrationPage } from './online-registration.page';\nimport { QrgenerateComponent } from './qrgenerate/qrgenerate.component';\nimport { NgxQRCodeModule } from '@techiediaries/ngx-qrcode';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OnlineRegistrationPageRoutingModule,\n    ReactiveFormsModule,\n    NgxQRCodeModule\n  ],\n  declarations: [\n    OnlineRegistrationPage,\n    QrgenerateComponent\n  ]\n})\nexport class OnlineRegistrationPageModule {}\n","export default \"ion-list button {\\n  margin-left: 25%;\\n}\\n\\nion-list {\\n  padding-left: 5%;\\n  padding-right: 5%;\\n}\\n\\n.form-control {\\n  border: 0;\\n  margin: 0px;\\n  padding: 0px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb25saW5lLXJlZ2lzdHJhdGlvbi9DOlxcVXNlcnNcXGFiYmhpbmF2XFxFY2ZpY2lvL3NyY1xcYXBwXFxvbmxpbmUtcmVnaXN0cmF0aW9uXFxvbmxpbmUtcmVnaXN0cmF0aW9uLnBhZ2Uuc2NzcyIsInNyYy9hcHAvb25saW5lLXJlZ2lzdHJhdGlvbi9vbmxpbmUtcmVnaXN0cmF0aW9uLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUNKO0FDQUE7O0FEQ0E7RUFDSSxnQkFBZTtFQUNmLGlCQUNKO0FDQ0E7O0FEQ0E7RUFDSSxTQUFRO0VBQ1IsV0FBVTtFQUNWLFlBQVc7QUNFZiIsImZpbGUiOiJzcmMvYXBwL29ubGluZS1yZWdpc3RyYXRpb24vb25saW5lLXJlZ2lzdHJhdGlvbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tbGlzdCBidXR0b257XHJcbiAgICBtYXJnaW4tbGVmdDoyNSVcclxufVxyXG5pb24tbGlzdHtcclxuICAgIHBhZGRpbmctbGVmdDo1JTtcclxuICAgIHBhZGRpbmctcmlnaHQ6NSVcclxufVxyXG5cclxuLmZvcm0tY29udHJvbHtcclxuICAgIGJvcmRlcjowO1xyXG4gICAgbWFyZ2luOjBweDtcclxuICAgIHBhZGRpbmc6MHB4O1xyXG59IiwiaW9uLWxpc3QgYnV0dG9uIHtcbiAgbWFyZ2luLWxlZnQ6IDI1JTtcbn1cblxuaW9uLWxpc3Qge1xuICBwYWRkaW5nLWxlZnQ6IDUlO1xuICBwYWRkaW5nLXJpZ2h0OiA1JTtcbn1cblxuLmZvcm0tY29udHJvbCB7XG4gIGJvcmRlcjogMDtcbiAgbWFyZ2luOiAwcHg7XG4gIHBhZGRpbmc6IDBweDtcbn1cbiJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { IttopService } from '../ittop.service';\nimport{ FormGroup,Validators, FormBuilder} from '@angular/forms';\nimport { User } from 'models/user';\nimport { Router } from '@angular/router';\ndeclare var RazorpayCheckout:any;\n\n@Component({\n  selector: 'app-online-registration',\n  templateUrl: './online-registration.page.html',\n  styleUrls: ['./online-registration.page.scss'],\n})\n\n//razor_secret=HRrxX8Rhb3b3K3Wurle0UHkf\nexport class OnlineRegistrationPage implements OnInit {\n\n  registrationForm:FormGroup;\n  submitted = false;\n  err:string=\"\";\n  userDetails:User={} as User;\n  paymentAmount:number=10;\n  currency=\"INR\";\n  currencyIcon=\"₹\";\n  //razor_key=\"HRrxX8Rhb3b3K3Wurle0UHkf\";\n  razor_key=\"rzp_test_tKmGlTQpVe7iyL\";\n  constructor(private us:IttopService,private alrt:AlertController,private fb:FormBuilder,private router:Router) { }\n\n  ngOnInit() {\n    this.registrationForm = this.fb.group({\n      email:    ['', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])],\n      name: ['',Validators.required],\n      rollno: ['', Validators.required],\n      college: ['', Validators.required],\n      phone: ['', [Validators.required, Validators.minLength(10),Validators.maxLength(10)]],\n    });\n  }\n\n  get f() { \n    return this.registrationForm.controls; \n  }  \n\n  call(){\n    console.log(this.paymentAmount);\n  }\n\n\n  createCode(){\n    this.submitted = true;\n    if (this.registrationForm.invalid) {\n        return;\n    }\n    this.us.validEmail({email:this.registrationForm.value.email}).subscribe(data=>{\n      console.log(data);\n      if(data==true){\n        this.userDetails.email=this.registrationForm.value.email;\n        this.paywithRazor();\n      }\n      else{\n        alert('enter valid email address');\n      }\n    })\n  }   \n\n\n  paywithRazor(){\n    this.userDetails.name=this.registrationForm.value.name;\n    this.userDetails.email=this.registrationForm.value.email;\n    this.userDetails.phone=this.registrationForm.value.phone;\n    this.userDetails.college=this.registrationForm.value.college;\n    this.userDetails.rollno=this.registrationForm.value.rollno;\n    var paymentAmount=this.paymentAmount\n    var options = {\n      description: 'Payment',\n      image: 'https://res.cloudinary.com/dmm4awbwm/image/upload/v1591517273/favicon_pbwxru.jpg', \n      currency: this.currency, // your 3 letter currency code\n      key: this.razor_key, // your Key Id from Razorpay dashboard\n      amount: this.paymentAmount, // Payment amount in smallest denomiation e.g. cents for USD\n      name: 'Ecficio',\n      prefill: {\n        email: this.registrationForm.value.email,\n        contact: this.registrationForm.value.phone,\n        name: this.registrationForm.value.name\n      },\n      theme: {\n        color: '#F37254'\n      },\n      modal: {\n        ondismiss: function () {\n          alert('dismissed')\n        }\n      }\n    };\n    \n    var successCallback = function (payment_id) {\n      this.userDetails.tid=payment_id;\n      this.userDetails.paymentAmount=paymentAmount;\n      this.userDetails.paid=true;\n      this.userDetails.timestamp=new Date();\n      this.us.addUser(this.userDetails).subscribe((data)=>{\n        if(data['message']=='already exists'){\n          alert(\"email already registered\");\n        }\n        else if(data['message']=='success'){\n          alert(\"receipt:\"+data['receipt']);\n          this.router.navigate(['online-registration/',data['receipt']]);\n        }\n        else{\n          alert('some error occured');\n        }\n      });\n      //alert('payment_id: ' + payment_id);\n    };\n\n    var cancelCallback = function (error) {      \n      alert(error.description + ' (Error ' + error.code + ')');\n    };\n\n    RazorpayCheckout.open(options, successCallback, cancelCallback);\n    \n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29ubGluZS1yZWdpc3RyYXRpb24vcXJnZW5lcmF0ZS9xcmdlbmVyYXRlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { IttopService } from 'src/app/ittop.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from 'models/user';\nimport { NavController } from '@ionic/angular';\n@Component({\n  selector: 'app-qrgenerate',\n  templateUrl: './qrgenerate.component.html',\n  styleUrls: ['./qrgenerate.component.scss'],\n})\nexport class QrgenerateComponent implements OnInit {\n\n  rno:number;\n  registerUser:User={} as User;\n  qrdata:string;\n  constructor(private us:IttopService,private route:ActivatedRoute,private navCtrl: NavController ) { }\n\n  ngOnInit() {\n    this.rno=Number(this.route.snapshot.paramMap.get('id'));\n    this.us.getUser({receipt: this.rno}).subscribe(data=>{\n      if(data['message']=='success'){\n        this.registerUser=data['data'];\n        this.qrdata=this.registerUser.receipt.toString().replace(/\\s/g,\"\")+\" \"+this.registerUser.name.replace(/\\s/g,\"\")+\" \"+\n          this.registerUser.college.replace(/\\s/g,\"\")+\" \"+this.registerUser.phone.toString().replace(/\\s/g,\"\")+\" \"+\n          this.registerUser.rollno.replace(/\\s/g,\"\")+\" \"+this.registerUser.email.replace(/\\s/g,\"\");\n        console.log(this.qrdata);\n      }\n      else{\n        alert(data);\n      }\n    });\n  }\n\n  done(){\n    this.navCtrl.back();\n  }\n\n}\n"]}